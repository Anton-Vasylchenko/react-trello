{"version":3,"sources":["services/api-services.js","redux/actions/boards.js","redux/actions/cards.js","components/ModalForm/ModalForm.js","components/ModalForm/index.js","components/Board/BoardAdd/BoardAdd.js","components/Board/BoardAdd/index.js","components/Header/Header.js","components/Header/index.js","components/Card/CardDelete/CardDelete.js","components/Card/CardDelete/index.js","components/Card/CardItem/CardItem.js","components/Card/CardItem/index.js","components/Card/CardAdd/CardAdd.js","components/Card/CardAdd/index.js","components/Board/BoardButtons/BoardButtons.js","components/Board/BoardButtons/index.js","components/Loader/Loader.js","components/Loader/index.js","components/Board/BoardItem/BoardItem.js","components/Board/BoardList/BoardList.js","components/Board/BoardList/index.js","App/App.js","App/index.js","redux/reducers/boards.js","redux/reducers/cards.js","redux/reducers/index.js","redux/store.js","index.js","components/Board/BoardItem/BoardItem.module.css","components/Card/CardItem/CardItem.module.css","components/Board/BoardButtons/BoardButtons.module.css","components/Board/BoardList/BoardList.module.css","components/Header/Header.module.css","components/Card/CardDelete/CardDelete.module.css","components/Card/CardAdd/CardAdd.module.css","components/Loader/Loader.module.css"],"names":["apiServices","_baseUrl","process","getBoards","a","axios","get","data","addBoard","title","post","deleteBoard","id","delete","getCards","addCard","item","deleteCardsByBoardId","listId","deleteCard","updateCard","ListId","boardId","patch","setBoards","items","type","payload","setBoardsLoaded","setCards","setCardsLoaded","ModalForm","onAddHandler","show","setShow","cardForm","useState","error","setError","inputRef","React","useRef","textRef","handleClose","Modal","onHide","Header","closeButton","Title","Body","length","Alert","variant","Form","Group","className","controlId","Label","Control","ref","placeholder","FloatingLabel","as","style","height","Footer","Button","onClick","enteredTitle","current","value","trim","text","BoardAdd","dispatch","useDispatch","size","then","styles","header","CardDelete","CardItem","index","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","Card","bg","card","Text","date","moment","utc","createdAt","local","startOf","fromNow","CardAdd","cards","useSelector","button","newCard","idx","BoardButtons","cardsList","filter","buttons","Loader","animation","spinnerAnimation","Spinner","loader","BoardItem","isLoaded","cardsArray","useEffect","droppableId","board","droppableProps","map","breakpointColumnsObj","default","BoardList","boards","content","breakpointCols","columnClassName","onDragEnd","result","destination","cardIndex","indexOf","newCards","splice","Container","App","initialState","state","action","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e9138913.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass ApiServices {\r\n    _baseUrl = `${process.env.REACT_APP_API_URL}api/`;\r\n\r\n    getBoards = async () => {\r\n        const { data } = await axios.get(`${this._baseUrl}list/`)\r\n        return data;\r\n    }\r\n\r\n    addBoard = async (title) => {\r\n        const { data } = await axios.post(`${this._baseUrl}list`, title)\r\n        return data;\r\n    }\r\n\r\n    deleteBoard = async (id) => {\r\n        const { data } = await axios.delete(`${this._baseUrl}list/` + id)\r\n        return data;\r\n    }\r\n\r\n    getCards = async () => {\r\n        const { data } = await axios.get(`${this._baseUrl}card/`)\r\n        return data;\r\n    }\r\n\r\n    addCard = async (item) => {\r\n        const { data } = await axios.post(`${this._baseUrl}card`, item)\r\n        return data;\r\n    }\r\n\r\n    deleteCardsByBoardId = async (listId) => {\r\n        const { data } = await axios.delete(`${this._baseUrl}card/deleteByBoardId/` + listId)\r\n        return data;\r\n    }\r\n\r\n    deleteCard = async (id) => {\r\n        const { data } = await axios.delete(`${this._baseUrl}card/` + id)\r\n        return data;\r\n    }\r\n\r\n    updateCard = async (id, listId) => {\r\n        const ListId = { boardId: listId }\r\n        const { data } = await axios.patch(`${this._baseUrl}card/` + id, ListId);\r\n        return data;\r\n    }\r\n}\r\n\r\nconst apiServices = new ApiServices();\r\n\r\nexport default apiServices;\r\n\r\n","import apiServices from '../../services/api-services';\r\n\r\nconst fetchBoards = () => (dispatch) => {\r\n    dispatch(setBoardsLoaded(false));\r\n    apiServices.getBoards().then(data => {\r\n        dispatch(setBoards(data));\r\n    })\r\n}\r\n\r\nconst setBoards = (items) => ({\r\n    type: 'SET_BOARDS',\r\n    payload: items\r\n});\r\n\r\nconst addBoard = (item) => ({\r\n    type: 'ADD_BOARD',\r\n    payload: item\r\n});\r\n\r\nconst deleteBoard = (item) => ({\r\n    type: 'DELETE_BOARD',\r\n    payload: item\r\n});\r\n\r\nconst setBoardsLoaded = (payload) => ({\r\n    type: 'SET_BOARDS_LOADED',\r\n    payload,\r\n})\r\n\r\nexport {\r\n    fetchBoards,\r\n    setBoards,\r\n    setBoardsLoaded,\r\n    addBoard,\r\n    deleteBoard\r\n};","import apiServices from '../../services/api-services';\r\n\r\nconst fetchCards = () => (dispatch) => {\r\n    dispatch(setCardsLoaded(false));\r\n    apiServices.getCards().then(data => {\r\n        dispatch(setCards(data));\r\n    })\r\n}\r\n\r\nconst setCards = (items) => ({\r\n    type: 'SET_CARDS',\r\n    payload: items\r\n});\r\n\r\nconst addCard = (items) => ({\r\n    type: 'ADD_CARDS',\r\n    payload: items\r\n});\r\n\r\nconst setCardsLoaded = (payload) => ({\r\n    type: 'SET_LOADED',\r\n    payload,\r\n})\r\n\r\nconst deleteCards = (payload) => ({\r\n    type: 'DELETE_CARDS',\r\n    payload,\r\n})\r\n\r\nconst deleteCard = (payload) => ({\r\n    type: 'DELETE_CARD',\r\n    payload,\r\n})\r\n\r\nexport {\r\n    fetchCards,\r\n    setCards,\r\n    setCardsLoaded,\r\n    deleteCards,\r\n    addCard,\r\n    deleteCard\r\n};","import React, { useState } from 'react';\r\nimport { Button, Modal, Form, Alert, FloatingLabel } from 'react-bootstrap';\r\n\r\nfunction ModalForm({ onAddHandler, show, setShow, cardForm }) {\r\n    const [error, setError] = useState('');\r\n    const inputRef = React.useRef();\r\n    const textRef = React.useRef();\r\n\r\n    const handleClose = () => {\r\n        setError('');\r\n        setShow(false)\r\n    };\r\n\r\n    const addNewBoard = () => {\r\n        const enteredTitle = inputRef.current.value;\r\n\r\n        if (enteredTitle.trim().length === 0) {\r\n            setError('Please, enter a title!');\r\n            return;\r\n        }\r\n\r\n        if (cardForm && textRef.current.value.trim().length === 0) {\r\n            setError('Please, enter a text!');\r\n            return;\r\n        }\r\n\r\n        let item;\r\n\r\n        if (!cardForm) {\r\n            item = { title: enteredTitle }\r\n            onAddHandler(item)\r\n            handleClose();\r\n            return;\r\n        }\r\n\r\n        item = { title: enteredTitle, text: textRef.current.value }\r\n        onAddHandler(item)\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>New board</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {error.length !== 0 && <Alert variant='warning'>\r\n                        {error}\r\n                    </Alert>}\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"title\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control ref={inputRef} type=\"text\" placeholder=\"Enter a title\" />\r\n                        </Form.Group>\r\n                        {cardForm &&\r\n                            <FloatingLabel controlId=\"floatingTextarea2\">\r\n                                <Form.Control\r\n                                    ref={textRef}\r\n                                    as=\"textarea\"\r\n                                    placeholder=\"Please, enter your text here\"\r\n                                    style={{ height: '100px' }}\r\n                                />\r\n                            </FloatingLabel>}\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={addNewBoard}>\r\n                        Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalForm\r\n","import ModalForm from './ModalForm';\r\nexport default ModalForm;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addBoard } from '../../../redux/actions';\r\nimport apiServices from '../../../services/api-services';\r\nimport ModalForm from '../../ModalForm';\r\nimport { MdOutlineAdd } from 'react-icons/md';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction BoardAdd() {\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const addNewBoard = (item) => {\r\n        apiServices.addBoard({ title: item.title }).then(data => {\r\n            dispatch(addBoard(data))\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"success\"\r\n                size=\"sm\"\r\n                className=\"m-2\"\r\n                onClick={handleShow}\r\n            >\r\n                <MdOutlineAdd />\r\n            </Button>\r\n\r\n            <ModalForm onAddHandler={addNewBoard} show={show} setShow={setShow} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BoardAdd;","import BoardAdd from './BoardAdd';\r\nexport default BoardAdd;","import React from 'react'\r\nimport styles from './Header.module.css';\r\nimport BoardAdd from '../Board/BoardAdd';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={styles.header}>\r\n            <BoardAdd />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import Header from './Header';\r\nexport default Header;","import React from 'react';\r\nimport { ImCross } from 'react-icons/im';\r\nimport { deleteCard } from '../../../redux/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport styles from './CardDelete.module.css';\r\nimport apiServices from '../../../services/api-services';\r\n\r\nfunction CardDelete({ id }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const onDeleteHandler = () => {\r\n        apiServices.deleteCard(id).then(data => {\r\n            dispatch(deleteCard(id))\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={styles['delete-button']} onClick={onDeleteHandler}>\r\n            <ImCross />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDelete\r\n","import CardDelete from './CardDelete';\r\nexport default CardDelete;","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport CardDelete from '../CardDelete';\r\nimport moment from 'moment';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport styles from './CardItem.module.css';\r\n\r\nfunction CardItem({ item, index }) {\r\n    return (\r\n        <Draggable draggableId={`${item.id + ''}`} index={index}>\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div\r\n                        ref={provided.innerRef}\r\n                        snapshot={snapshot}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                    >\r\n\r\n                        <Card\r\n                            bg='Light'\r\n                            key={item.id}\r\n                            text='dark'\r\n                            className={styles.card}\r\n                        >\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {item.title}\r\n                                </Card.Title>\r\n                                <Card.Text className={styles['card-text']}>\r\n                                    {item.text}\r\n                                </Card.Text>\r\n\r\n                            </Card.Body>\r\n\r\n                            <div className={styles.date}>\r\n                                {moment.utc(item.createdAt).local().startOf('seconds').fromNow()}\r\n                            </div>\r\n\r\n                            <CardDelete id={item.id} />\r\n                        </Card>\r\n                    </div>)\r\n            }}\r\n        </Draggable >\r\n\r\n    )\r\n}\r\n\r\nexport default CardItem\r\n","import CardItem from './CardItem';\r\nexport default CardItem;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCard } from '../../../redux/actions';\r\nimport apiServices from '../../../services/api-services';\r\nimport ModalForm from '../../ModalForm';\r\nimport { Button } from 'react-bootstrap';\r\nimport { MdOutlineAdd } from 'react-icons/md';\r\n\r\nimport styles from './CardAdd.module.css';\r\n\r\nfunction CardAdd({ boardId }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const { cards } = useSelector(({ cards }) => cards)\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const addNewCard = (item) => {\r\n        apiServices.addCard({\r\n            title: item.title,\r\n            text: item.text,\r\n            listId: boardId\r\n        }).then(data => {\r\n            const newCard = { ...data }\r\n            newCard.idx = cards.length;\r\n            dispatch(addCard(newCard))\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"info\"\r\n                size=\"sm\"\r\n                className={styles.button}\r\n                onClick={handleShow}\r\n            >\r\n                <MdOutlineAdd />\r\n            </Button>\r\n\r\n            <ModalForm onAddHandler={addNewCard} show={show} setShow={setShow} cardForm={true} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardAdd;","import CardAdd from './CardAdd';\r\nexport default CardAdd;","import React from 'react';\r\nimport { AiFillDelete, AiOutlineClose } from 'react-icons/ai';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteBoard, deleteCards } from '../../../redux/actions';\r\nimport apiServices from '../../../services/api-services';\r\nimport CardAdd from '../../Card/CardAdd';\r\n\r\nimport styles from './BoardButtons.module.css';\r\n\r\nfunction BoardButtons({ boardId }) {\r\n    const dispatch = useDispatch();\r\n    const { cards } = useSelector(({ cards }) => cards);\r\n\r\n    const cardsList = cards.filter(card => card.ListId === boardId)\r\n\r\n    const onDeleteHandler = () => {\r\n        dispatch(deleteBoard(boardId))\r\n        apiServices.deleteBoard(boardId);\r\n    }\r\n\r\n    const onClearHandler = () => {\r\n        dispatch(deleteCards(boardId))\r\n        apiServices.deleteCardsByBoardId(boardId);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.buttons}>\r\n\r\n            <CardAdd boardId={boardId} />\r\n\r\n            {cardsList.length !== 0 && <Button onClick={onClearHandler} className={styles.button} size=\"sm\" variant=\"warning\">\r\n                <AiFillDelete />\r\n            </Button>}\r\n\r\n            <Button onClick={onDeleteHandler} className={styles.button} size=\"sm\" variant=\"danger\">\r\n                <AiOutlineClose />\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardButtons\r\n","import BoardButtons from './BoardButtons';\r\nexport default BoardButtons;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nimport styles from './Loader.module.css';\r\n\r\nfunction Loader({ animation }) {\r\n    const spinnerAnimation = !animation ? 'border' : animation;\r\n\r\n    return (\r\n        <Spinner className={styles.loader} animation={spinnerAnimation} />\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import Loader from './Loader';\r\nexport default Loader;","import React from 'react';\r\nimport CardItem from '../../Card/CardItem';\r\nimport BoardButtons from '../BoardButtons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { fetchCards } from '../../../redux/actions';\r\nimport Loader from '../../Loader';\r\n\r\nimport styles from './BoardItem.module.css';\r\n\r\nfunction BoardItem({ item }) {\r\n    const dispatch = useDispatch();\r\n    const { cards, isLoaded } = useSelector(({ cards }) => cards);\r\n\r\n    const cardsArray = cards.filter(card => card.ListId === item.id)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchCards());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Droppable droppableId={`${item.id}`}>\r\n            {(provided) => (\r\n                <div className={styles.board}>\r\n                    <div className={styles['board-title']}>\r\n                        {item.title}\r\n                        <div className={styles[\"nav-panel\"]}>\r\n                            <BoardButtons boardId={item.id} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles['board-content']} {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {isLoaded ? cardsArray.map((item, index) => (\r\n                            <CardItem key={item.id} item={item} index={index} />\r\n                        )) : <Loader animation={'grow'} />}\r\n                    </div>\r\n                    {provided.placeholder}\r\n                </div>\r\n            )}\r\n        </Droppable>\r\n    )\r\n}\r\n\r\nexport default BoardItem\r\n\r\n","import React from 'react'\r\nimport BoardItem from '../BoardItem/BoardItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { setCards } from '../../../redux/actions';\r\nimport Loader from '../../Loader';\r\nimport { Container } from 'react-bootstrap';\r\nimport Masonry from 'react-masonry-css'\r\n\r\nimport styles from './BoardList.module.css';\r\nimport { fetchBoards } from '../../../redux/actions';\r\nimport apiServices from '../../../services/api-services';\r\n\r\nconst breakpointColumnsObj = {\r\n    default: 5,\r\n    1100: 3,\r\n    700: 3,\r\n    500: 2\r\n};\r\n\r\nfunction BoardList() {\r\n    const dispatch = useDispatch();\r\n\r\n    const { boards, isLoaded } = useSelector(({ boards }) => boards);\r\n    const { cards } = useSelector(({ cards }) => cards);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchBoards());\r\n    }, [dispatch])\r\n\r\n    const onDragEndHandler = (result) => {\r\n        const { destination, draggableId } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        const card = cards.filter(item => item.id === +draggableId)[0];\r\n\r\n        const newCard = { ...card }\r\n        newCard.ListId = +destination.droppableId;\r\n\r\n        const cardIndex = cards.indexOf(card)\r\n        const newCards = [...cards]\r\n\r\n        newCards.splice(cardIndex, 1)\r\n        newCards.splice(destination.index, 0, newCard)\r\n\r\n        apiServices.updateCard(card.id, destination.droppableId);\r\n        dispatch(setCards(newCards))\r\n    }\r\n\r\n    const content = isLoaded ?\r\n        <Masonry\r\n            breakpointCols={breakpointColumnsObj}\r\n            className={styles[\"my-masonry-grid\"]}\r\n            columnClassName={styles[\"my-masonry-grid_column\"]}>\r\n            {boards.map((board, index) => (\r\n                <BoardItem item={board} key={board.id} index={index} />\r\n            ))}\r\n        </Masonry> : <Loader />\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEndHandler}>\r\n            <Container className=\"text-center\">\r\n                {content}\r\n            </Container>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\nexport default BoardList\r\n","import BoardList from './BoardList';\r\nexport default BoardList;","import Header from '../components/Header';\nimport BoardList from '../components/Board/BoardList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <BoardList />\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App';\r\nexport default App;","const initialState = {\r\n    boards: [],\r\n    isLoaded: true\r\n}\r\n\r\nconst boards = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                boards: action.payload,\r\n                isLoaded: true\r\n            };\r\n        case 'SET_BOARDS_LOADED':\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload\r\n            };\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.payload]\r\n            };\r\n        case 'DELETE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(item => item.id !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default boards;","const initialState = {\r\n    cards: [],\r\n    isLoaded: true\r\n}\r\n\r\nconst cards = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CARDS':\r\n            return {\r\n                ...state,\r\n                cards: action.payload,\r\n                isLoaded: true\r\n            };\r\n        case 'SET_LOADED':\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload\r\n            };\r\n        case 'DELETE_CARDS':\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(card => card.ListId !== action.payload)\r\n            };\r\n        case 'DELETE_CARD':\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(card => card.id !== action.payload)\r\n            };\r\n        case 'ADD_CARDS':\r\n            return {\r\n                ...state,\r\n                cards: [...state.cards, action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cards;","import { combineReducers } from 'redux';\r\n\r\nimport boards from './boards';\r\nimport cards from './cards';\r\n\r\nconst rootReducer = combineReducers({\r\n    boards,\r\n    cards\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"BoardItem_board__2Okcv\",\"board-title\":\"BoardItem_board-title__1jp0q\",\"board-content\":\"BoardItem_board-content__3mmrK\",\"nav-panel\":\"BoardItem_nav-panel__1w2lH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"CardItem_text__3Psxo\",\"card\":\"CardItem_card__1tNjq\",\"date\":\"CardItem_date__9bsAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"BoardButtons_buttons__17C-2\",\"button\":\"BoardButtons_button__3lqcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my-masonry-grid\":\"BoardList_my-masonry-grid__2a33h\",\"my-masonry-grid_column\":\"BoardList_my-masonry-grid_column__O5flV\",\"list\":\"BoardList_list__kZXVJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1kxJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete-button\":\"CardDelete_delete-button__1K3Oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CardAdd_button__2Wa0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__r3y-1\"};"],"sourceRoot":""}